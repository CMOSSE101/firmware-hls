// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module VMRouter_1_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stubsInLayer_0_data_address0,
        stubsInLayer_0_data_ce0,
        stubsInLayer_0_data_q0,
        stubsInLayer_1_data_address0,
        stubsInLayer_1_data_ce0,
        stubsInLayer_1_data_q0,
        stubsInLayer_2_data_address0,
        stubsInLayer_2_data_ce0,
        stubsInLayer_2_data_q0,
        stubsInLayer_3_data_address0,
        stubsInLayer_3_data_ce0,
        stubsInLayer_3_data_q0,
        stubsInLayer_4_data_address0,
        stubsInLayer_4_data_ce0,
        stubsInLayer_4_data_q0,
        stubsInLayer_5_data_address0,
        stubsInLayer_5_data_ce0,
        stubsInLayer_5_data_q0,
        stubsInLayer_6_data_address0,
        stubsInLayer_6_data_ce0,
        stubsInLayer_6_data_q0,
        stubsInLayer_7_data_address0,
        stubsInLayer_7_data_ce0,
        stubsInLayer_7_data_q0,
        stubsInLayer_8_data_address0,
        stubsInLayer_8_data_ce0,
        stubsInLayer_8_data_q0,
        tmp_1,
        allStubs_0_data_V_address0,
        allStubs_0_data_V_ce0,
        allStubs_0_data_V_we0,
        allStubs_0_data_V_d0,
        allStubs_1_data_V_address0,
        allStubs_1_data_V_ce0,
        allStubs_1_data_V_we0,
        allStubs_1_data_V_d0,
        allStubs_2_data_V_address0,
        allStubs_2_data_V_ce0,
        allStubs_2_data_V_we0,
        allStubs_2_data_V_d0,
        allStubs_3_data_V_address0,
        allStubs_3_data_V_ce0,
        allStubs_3_data_V_we0,
        allStubs_3_data_V_d0,
        allStubs_8_data_V_address0,
        allStubs_8_data_V_ce0,
        allStubs_8_data_V_we0,
        allStubs_8_data_V_d0,
        tmp_11,
        vmStubsPH1Z1_0_data_address0,
        vmStubsPH1Z1_0_data_ce0,
        vmStubsPH1Z1_0_data_we0,
        vmStubsPH1Z1_0_data_d0,
        vmStubsPH1Z1_1_data_address0,
        vmStubsPH1Z1_1_data_ce0,
        vmStubsPH1Z1_1_data_we0,
        vmStubsPH1Z1_1_data_d0,
        vmStubsPH1Z1_2_data_address0,
        vmStubsPH1Z1_2_data_ce0,
        vmStubsPH1Z1_2_data_we0,
        vmStubsPH1Z1_2_data_d0,
        vmStubsPH1Z1_3_data_address0,
        vmStubsPH1Z1_3_data_ce0,
        vmStubsPH1Z1_3_data_we0,
        vmStubsPH1Z1_3_data_d0,
        vmStubsPH1Z1_8_data_address0,
        vmStubsPH1Z1_8_data_ce0,
        vmStubsPH1Z1_8_data_we0,
        vmStubsPH1Z1_8_data_d0,
        tmp_12,
        vmStubsPH2Z1_0_data_address0,
        vmStubsPH2Z1_0_data_ce0,
        vmStubsPH2Z1_0_data_we0,
        vmStubsPH2Z1_0_data_d0,
        vmStubsPH2Z1_1_data_address0,
        vmStubsPH2Z1_1_data_ce0,
        vmStubsPH2Z1_1_data_we0,
        vmStubsPH2Z1_1_data_d0,
        vmStubsPH2Z1_2_data_address0,
        vmStubsPH2Z1_2_data_ce0,
        vmStubsPH2Z1_2_data_we0,
        vmStubsPH2Z1_2_data_d0,
        vmStubsPH2Z1_3_data_address0,
        vmStubsPH2Z1_3_data_ce0,
        vmStubsPH2Z1_3_data_we0,
        vmStubsPH2Z1_3_data_d0,
        vmStubsPH2Z1_8_data_address0,
        vmStubsPH2Z1_8_data_ce0,
        vmStubsPH2Z1_8_data_we0,
        vmStubsPH2Z1_8_data_d0,
        tmp_13,
        vmStubsPH3Z1_0_data_address0,
        vmStubsPH3Z1_0_data_ce0,
        vmStubsPH3Z1_0_data_we0,
        vmStubsPH3Z1_0_data_d0,
        vmStubsPH3Z1_1_data_address0,
        vmStubsPH3Z1_1_data_ce0,
        vmStubsPH3Z1_1_data_we0,
        vmStubsPH3Z1_1_data_d0,
        vmStubsPH3Z1_2_data_address0,
        vmStubsPH3Z1_2_data_ce0,
        vmStubsPH3Z1_2_data_we0,
        vmStubsPH3Z1_2_data_d0,
        vmStubsPH3Z1_3_data_address0,
        vmStubsPH3Z1_3_data_ce0,
        vmStubsPH3Z1_3_data_we0,
        vmStubsPH3Z1_3_data_d0,
        vmStubsPH3Z1_8_data_address0,
        vmStubsPH3Z1_8_data_ce0,
        vmStubsPH3Z1_8_data_we0,
        vmStubsPH3Z1_8_data_d0,
        tmp_14,
        vmStubsPH4Z1_0_data_address0,
        vmStubsPH4Z1_0_data_ce0,
        vmStubsPH4Z1_0_data_we0,
        vmStubsPH4Z1_0_data_d0,
        vmStubsPH4Z1_1_data_address0,
        vmStubsPH4Z1_1_data_ce0,
        vmStubsPH4Z1_1_data_we0,
        vmStubsPH4Z1_1_data_d0,
        vmStubsPH4Z1_2_data_address0,
        vmStubsPH4Z1_2_data_ce0,
        vmStubsPH4Z1_2_data_we0,
        vmStubsPH4Z1_2_data_d0,
        vmStubsPH4Z1_3_data_address0,
        vmStubsPH4Z1_3_data_ce0,
        vmStubsPH4Z1_3_data_we0,
        vmStubsPH4Z1_3_data_d0,
        vmStubsPH4Z1_8_data_address0,
        vmStubsPH4Z1_8_data_ce0,
        vmStubsPH4Z1_8_data_we0,
        vmStubsPH4Z1_8_data_d0,
        tmp_15,
        vmStubsPH1Z2_0_data_address0,
        vmStubsPH1Z2_0_data_ce0,
        vmStubsPH1Z2_0_data_we0,
        vmStubsPH1Z2_0_data_d0,
        vmStubsPH1Z2_1_data_address0,
        vmStubsPH1Z2_1_data_ce0,
        vmStubsPH1Z2_1_data_we0,
        vmStubsPH1Z2_1_data_d0,
        vmStubsPH1Z2_2_data_address0,
        vmStubsPH1Z2_2_data_ce0,
        vmStubsPH1Z2_2_data_we0,
        vmStubsPH1Z2_2_data_d0,
        vmStubsPH1Z2_3_data_address0,
        vmStubsPH1Z2_3_data_ce0,
        vmStubsPH1Z2_3_data_we0,
        vmStubsPH1Z2_3_data_d0,
        vmStubsPH1Z2_8_data_address0,
        vmStubsPH1Z2_8_data_ce0,
        vmStubsPH1Z2_8_data_we0,
        vmStubsPH1Z2_8_data_d0,
        tmp_16,
        vmStubsPH2Z2_0_data_address0,
        vmStubsPH2Z2_0_data_ce0,
        vmStubsPH2Z2_0_data_we0,
        vmStubsPH2Z2_0_data_d0,
        vmStubsPH2Z2_1_data_address0,
        vmStubsPH2Z2_1_data_ce0,
        vmStubsPH2Z2_1_data_we0,
        vmStubsPH2Z2_1_data_d0,
        vmStubsPH2Z2_2_data_address0,
        vmStubsPH2Z2_2_data_ce0,
        vmStubsPH2Z2_2_data_we0,
        vmStubsPH2Z2_2_data_d0,
        vmStubsPH2Z2_3_data_address0,
        vmStubsPH2Z2_3_data_ce0,
        vmStubsPH2Z2_3_data_we0,
        vmStubsPH2Z2_3_data_d0,
        vmStubsPH2Z2_8_data_address0,
        vmStubsPH2Z2_8_data_ce0,
        vmStubsPH2Z2_8_data_we0,
        vmStubsPH2Z2_8_data_d0,
        tmp_17,
        vmStubsPH3Z2_0_data_address0,
        vmStubsPH3Z2_0_data_ce0,
        vmStubsPH3Z2_0_data_we0,
        vmStubsPH3Z2_0_data_d0,
        vmStubsPH3Z2_1_data_address0,
        vmStubsPH3Z2_1_data_ce0,
        vmStubsPH3Z2_1_data_we0,
        vmStubsPH3Z2_1_data_d0,
        vmStubsPH3Z2_2_data_address0,
        vmStubsPH3Z2_2_data_ce0,
        vmStubsPH3Z2_2_data_we0,
        vmStubsPH3Z2_2_data_d0,
        vmStubsPH3Z2_3_data_address0,
        vmStubsPH3Z2_3_data_ce0,
        vmStubsPH3Z2_3_data_we0,
        vmStubsPH3Z2_3_data_d0,
        vmStubsPH3Z2_8_data_address0,
        vmStubsPH3Z2_8_data_ce0,
        vmStubsPH3Z2_8_data_we0,
        vmStubsPH3Z2_8_data_d0,
        tmp_18,
        vmStubsPH4Z2_0_data_address0,
        vmStubsPH4Z2_0_data_ce0,
        vmStubsPH4Z2_0_data_we0,
        vmStubsPH4Z2_0_data_d0,
        vmStubsPH4Z2_1_data_address0,
        vmStubsPH4Z2_1_data_ce0,
        vmStubsPH4Z2_1_data_we0,
        vmStubsPH4Z2_1_data_d0,
        vmStubsPH4Z2_2_data_address0,
        vmStubsPH4Z2_2_data_ce0,
        vmStubsPH4Z2_2_data_we0,
        vmStubsPH4Z2_2_data_d0,
        vmStubsPH4Z2_3_data_address0,
        vmStubsPH4Z2_3_data_ce0,
        vmStubsPH4Z2_3_data_we0,
        vmStubsPH4Z2_3_data_d0,
        vmStubsPH4Z2_8_data_address0,
        vmStubsPH4Z2_8_data_ce0,
        vmStubsPH4Z2_8_data_we0,
        vmStubsPH4Z2_8_data_d0,
        tmp_19,
        nStubs,
        nPH1Z1_V_read,
        nPH2Z1_V_read,
        nPH3Z1_V_read,
        nPH4Z1_V_read,
        nPH1Z2_V_read,
        nPH2Z2_V_read,
        nPH3Z2_V_read,
        nPH4Z2_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] stubsInLayer_0_data_address0;
output   stubsInLayer_0_data_ce0;
input  [35:0] stubsInLayer_0_data_q0;
output  [5:0] stubsInLayer_1_data_address0;
output   stubsInLayer_1_data_ce0;
input  [35:0] stubsInLayer_1_data_q0;
output  [5:0] stubsInLayer_2_data_address0;
output   stubsInLayer_2_data_ce0;
input  [35:0] stubsInLayer_2_data_q0;
output  [5:0] stubsInLayer_3_data_address0;
output   stubsInLayer_3_data_ce0;
input  [35:0] stubsInLayer_3_data_q0;
output  [5:0] stubsInLayer_4_data_address0;
output   stubsInLayer_4_data_ce0;
input  [35:0] stubsInLayer_4_data_q0;
output  [5:0] stubsInLayer_5_data_address0;
output   stubsInLayer_5_data_ce0;
input  [35:0] stubsInLayer_5_data_q0;
output  [5:0] stubsInLayer_6_data_address0;
output   stubsInLayer_6_data_ce0;
input  [35:0] stubsInLayer_6_data_q0;
output  [5:0] stubsInLayer_7_data_address0;
output   stubsInLayer_7_data_ce0;
input  [35:0] stubsInLayer_7_data_q0;
output  [5:0] stubsInLayer_8_data_address0;
output   stubsInLayer_8_data_ce0;
input  [35:0] stubsInLayer_8_data_q0;
input  [8:0] tmp_1;
output  [5:0] allStubs_0_data_V_address0;
output   allStubs_0_data_V_ce0;
output   allStubs_0_data_V_we0;
output  [35:0] allStubs_0_data_V_d0;
output  [5:0] allStubs_1_data_V_address0;
output   allStubs_1_data_V_ce0;
output   allStubs_1_data_V_we0;
output  [35:0] allStubs_1_data_V_d0;
output  [5:0] allStubs_2_data_V_address0;
output   allStubs_2_data_V_ce0;
output   allStubs_2_data_V_we0;
output  [35:0] allStubs_2_data_V_d0;
output  [5:0] allStubs_3_data_V_address0;
output   allStubs_3_data_V_ce0;
output   allStubs_3_data_V_we0;
output  [35:0] allStubs_3_data_V_d0;
output  [5:0] allStubs_8_data_V_address0;
output   allStubs_8_data_V_ce0;
output   allStubs_8_data_V_we0;
output  [35:0] allStubs_8_data_V_d0;
input  [8:0] tmp_11;
output  [5:0] vmStubsPH1Z1_0_data_address0;
output   vmStubsPH1Z1_0_data_ce0;
output   vmStubsPH1Z1_0_data_we0;
output  [17:0] vmStubsPH1Z1_0_data_d0;
output  [5:0] vmStubsPH1Z1_1_data_address0;
output   vmStubsPH1Z1_1_data_ce0;
output   vmStubsPH1Z1_1_data_we0;
output  [17:0] vmStubsPH1Z1_1_data_d0;
output  [5:0] vmStubsPH1Z1_2_data_address0;
output   vmStubsPH1Z1_2_data_ce0;
output   vmStubsPH1Z1_2_data_we0;
output  [17:0] vmStubsPH1Z1_2_data_d0;
output  [5:0] vmStubsPH1Z1_3_data_address0;
output   vmStubsPH1Z1_3_data_ce0;
output   vmStubsPH1Z1_3_data_we0;
output  [17:0] vmStubsPH1Z1_3_data_d0;
output  [5:0] vmStubsPH1Z1_8_data_address0;
output   vmStubsPH1Z1_8_data_ce0;
output   vmStubsPH1Z1_8_data_we0;
output  [17:0] vmStubsPH1Z1_8_data_d0;
input  [8:0] tmp_12;
output  [5:0] vmStubsPH2Z1_0_data_address0;
output   vmStubsPH2Z1_0_data_ce0;
output   vmStubsPH2Z1_0_data_we0;
output  [17:0] vmStubsPH2Z1_0_data_d0;
output  [5:0] vmStubsPH2Z1_1_data_address0;
output   vmStubsPH2Z1_1_data_ce0;
output   vmStubsPH2Z1_1_data_we0;
output  [17:0] vmStubsPH2Z1_1_data_d0;
output  [5:0] vmStubsPH2Z1_2_data_address0;
output   vmStubsPH2Z1_2_data_ce0;
output   vmStubsPH2Z1_2_data_we0;
output  [17:0] vmStubsPH2Z1_2_data_d0;
output  [5:0] vmStubsPH2Z1_3_data_address0;
output   vmStubsPH2Z1_3_data_ce0;
output   vmStubsPH2Z1_3_data_we0;
output  [17:0] vmStubsPH2Z1_3_data_d0;
output  [5:0] vmStubsPH2Z1_8_data_address0;
output   vmStubsPH2Z1_8_data_ce0;
output   vmStubsPH2Z1_8_data_we0;
output  [17:0] vmStubsPH2Z1_8_data_d0;
input  [8:0] tmp_13;
output  [5:0] vmStubsPH3Z1_0_data_address0;
output   vmStubsPH3Z1_0_data_ce0;
output   vmStubsPH3Z1_0_data_we0;
output  [17:0] vmStubsPH3Z1_0_data_d0;
output  [5:0] vmStubsPH3Z1_1_data_address0;
output   vmStubsPH3Z1_1_data_ce0;
output   vmStubsPH3Z1_1_data_we0;
output  [17:0] vmStubsPH3Z1_1_data_d0;
output  [5:0] vmStubsPH3Z1_2_data_address0;
output   vmStubsPH3Z1_2_data_ce0;
output   vmStubsPH3Z1_2_data_we0;
output  [17:0] vmStubsPH3Z1_2_data_d0;
output  [5:0] vmStubsPH3Z1_3_data_address0;
output   vmStubsPH3Z1_3_data_ce0;
output   vmStubsPH3Z1_3_data_we0;
output  [17:0] vmStubsPH3Z1_3_data_d0;
output  [5:0] vmStubsPH3Z1_8_data_address0;
output   vmStubsPH3Z1_8_data_ce0;
output   vmStubsPH3Z1_8_data_we0;
output  [17:0] vmStubsPH3Z1_8_data_d0;
input  [8:0] tmp_14;
output  [5:0] vmStubsPH4Z1_0_data_address0;
output   vmStubsPH4Z1_0_data_ce0;
output   vmStubsPH4Z1_0_data_we0;
output  [17:0] vmStubsPH4Z1_0_data_d0;
output  [5:0] vmStubsPH4Z1_1_data_address0;
output   vmStubsPH4Z1_1_data_ce0;
output   vmStubsPH4Z1_1_data_we0;
output  [17:0] vmStubsPH4Z1_1_data_d0;
output  [5:0] vmStubsPH4Z1_2_data_address0;
output   vmStubsPH4Z1_2_data_ce0;
output   vmStubsPH4Z1_2_data_we0;
output  [17:0] vmStubsPH4Z1_2_data_d0;
output  [5:0] vmStubsPH4Z1_3_data_address0;
output   vmStubsPH4Z1_3_data_ce0;
output   vmStubsPH4Z1_3_data_we0;
output  [17:0] vmStubsPH4Z1_3_data_d0;
output  [5:0] vmStubsPH4Z1_8_data_address0;
output   vmStubsPH4Z1_8_data_ce0;
output   vmStubsPH4Z1_8_data_we0;
output  [17:0] vmStubsPH4Z1_8_data_d0;
input  [8:0] tmp_15;
output  [5:0] vmStubsPH1Z2_0_data_address0;
output   vmStubsPH1Z2_0_data_ce0;
output   vmStubsPH1Z2_0_data_we0;
output  [17:0] vmStubsPH1Z2_0_data_d0;
output  [5:0] vmStubsPH1Z2_1_data_address0;
output   vmStubsPH1Z2_1_data_ce0;
output   vmStubsPH1Z2_1_data_we0;
output  [17:0] vmStubsPH1Z2_1_data_d0;
output  [5:0] vmStubsPH1Z2_2_data_address0;
output   vmStubsPH1Z2_2_data_ce0;
output   vmStubsPH1Z2_2_data_we0;
output  [17:0] vmStubsPH1Z2_2_data_d0;
output  [5:0] vmStubsPH1Z2_3_data_address0;
output   vmStubsPH1Z2_3_data_ce0;
output   vmStubsPH1Z2_3_data_we0;
output  [17:0] vmStubsPH1Z2_3_data_d0;
output  [5:0] vmStubsPH1Z2_8_data_address0;
output   vmStubsPH1Z2_8_data_ce0;
output   vmStubsPH1Z2_8_data_we0;
output  [17:0] vmStubsPH1Z2_8_data_d0;
input  [8:0] tmp_16;
output  [5:0] vmStubsPH2Z2_0_data_address0;
output   vmStubsPH2Z2_0_data_ce0;
output   vmStubsPH2Z2_0_data_we0;
output  [17:0] vmStubsPH2Z2_0_data_d0;
output  [5:0] vmStubsPH2Z2_1_data_address0;
output   vmStubsPH2Z2_1_data_ce0;
output   vmStubsPH2Z2_1_data_we0;
output  [17:0] vmStubsPH2Z2_1_data_d0;
output  [5:0] vmStubsPH2Z2_2_data_address0;
output   vmStubsPH2Z2_2_data_ce0;
output   vmStubsPH2Z2_2_data_we0;
output  [17:0] vmStubsPH2Z2_2_data_d0;
output  [5:0] vmStubsPH2Z2_3_data_address0;
output   vmStubsPH2Z2_3_data_ce0;
output   vmStubsPH2Z2_3_data_we0;
output  [17:0] vmStubsPH2Z2_3_data_d0;
output  [5:0] vmStubsPH2Z2_8_data_address0;
output   vmStubsPH2Z2_8_data_ce0;
output   vmStubsPH2Z2_8_data_we0;
output  [17:0] vmStubsPH2Z2_8_data_d0;
input  [8:0] tmp_17;
output  [5:0] vmStubsPH3Z2_0_data_address0;
output   vmStubsPH3Z2_0_data_ce0;
output   vmStubsPH3Z2_0_data_we0;
output  [17:0] vmStubsPH3Z2_0_data_d0;
output  [5:0] vmStubsPH3Z2_1_data_address0;
output   vmStubsPH3Z2_1_data_ce0;
output   vmStubsPH3Z2_1_data_we0;
output  [17:0] vmStubsPH3Z2_1_data_d0;
output  [5:0] vmStubsPH3Z2_2_data_address0;
output   vmStubsPH3Z2_2_data_ce0;
output   vmStubsPH3Z2_2_data_we0;
output  [17:0] vmStubsPH3Z2_2_data_d0;
output  [5:0] vmStubsPH3Z2_3_data_address0;
output   vmStubsPH3Z2_3_data_ce0;
output   vmStubsPH3Z2_3_data_we0;
output  [17:0] vmStubsPH3Z2_3_data_d0;
output  [5:0] vmStubsPH3Z2_8_data_address0;
output   vmStubsPH3Z2_8_data_ce0;
output   vmStubsPH3Z2_8_data_we0;
output  [17:0] vmStubsPH3Z2_8_data_d0;
input  [8:0] tmp_18;
output  [5:0] vmStubsPH4Z2_0_data_address0;
output   vmStubsPH4Z2_0_data_ce0;
output   vmStubsPH4Z2_0_data_we0;
output  [17:0] vmStubsPH4Z2_0_data_d0;
output  [5:0] vmStubsPH4Z2_1_data_address0;
output   vmStubsPH4Z2_1_data_ce0;
output   vmStubsPH4Z2_1_data_we0;
output  [17:0] vmStubsPH4Z2_1_data_d0;
output  [5:0] vmStubsPH4Z2_2_data_address0;
output   vmStubsPH4Z2_2_data_ce0;
output   vmStubsPH4Z2_2_data_we0;
output  [17:0] vmStubsPH4Z2_2_data_d0;
output  [5:0] vmStubsPH4Z2_3_data_address0;
output   vmStubsPH4Z2_3_data_ce0;
output   vmStubsPH4Z2_3_data_we0;
output  [17:0] vmStubsPH4Z2_3_data_d0;
output  [5:0] vmStubsPH4Z2_8_data_address0;
output   vmStubsPH4Z2_8_data_ce0;
output   vmStubsPH4Z2_8_data_we0;
output  [17:0] vmStubsPH4Z2_8_data_d0;
input  [8:0] tmp_19;
input  [31:0] nStubs;
input  [5:0] nPH1Z1_V_read;
input  [5:0] nPH2Z1_V_read;
input  [5:0] nPH3Z1_V_read;
input  [5:0] nPH4Z1_V_read;
input  [5:0] nPH1Z2_V_read;
input  [5:0] nPH2Z2_V_read;
input  [5:0] nPH3Z2_V_read;
input  [5:0] nPH4Z2_V_read;
output  [5:0] ap_return_0;
output  [5:0] ap_return_1;
output  [5:0] ap_return_2;
output  [5:0] ap_return_3;
output  [5:0] ap_return_4;
output  [5:0] ap_return_5;
output  [5:0] ap_return_6;
output  [5:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stubsInLayer_0_data_ce0;
reg stubsInLayer_1_data_ce0;
reg stubsInLayer_2_data_ce0;
reg stubsInLayer_3_data_ce0;
reg stubsInLayer_4_data_ce0;
reg stubsInLayer_5_data_ce0;
reg stubsInLayer_6_data_ce0;
reg stubsInLayer_7_data_ce0;
reg stubsInLayer_8_data_ce0;
reg allStubs_0_data_V_ce0;
reg allStubs_0_data_V_we0;
reg allStubs_1_data_V_ce0;
reg allStubs_1_data_V_we0;
reg allStubs_2_data_V_ce0;
reg allStubs_2_data_V_we0;
reg allStubs_3_data_V_ce0;
reg allStubs_3_data_V_we0;
reg allStubs_8_data_V_ce0;
reg vmStubsPH1Z1_0_data_ce0;
reg vmStubsPH1Z1_0_data_we0;
reg vmStubsPH1Z1_1_data_ce0;
reg vmStubsPH1Z1_1_data_we0;
reg vmStubsPH1Z1_2_data_ce0;
reg vmStubsPH1Z1_2_data_we0;
reg vmStubsPH1Z1_3_data_ce0;
reg vmStubsPH1Z1_3_data_we0;
reg vmStubsPH1Z1_8_data_ce0;
reg vmStubsPH2Z1_0_data_ce0;
reg vmStubsPH2Z1_0_data_we0;
reg vmStubsPH2Z1_1_data_ce0;
reg vmStubsPH2Z1_1_data_we0;
reg vmStubsPH2Z1_2_data_ce0;
reg vmStubsPH2Z1_2_data_we0;
reg vmStubsPH2Z1_3_data_ce0;
reg vmStubsPH2Z1_3_data_we0;
reg vmStubsPH2Z1_8_data_ce0;
reg vmStubsPH3Z1_0_data_ce0;
reg vmStubsPH3Z1_0_data_we0;
reg vmStubsPH3Z1_1_data_ce0;
reg vmStubsPH3Z1_1_data_we0;
reg vmStubsPH3Z1_2_data_ce0;
reg vmStubsPH3Z1_2_data_we0;
reg vmStubsPH3Z1_3_data_ce0;
reg vmStubsPH3Z1_3_data_we0;
reg vmStubsPH3Z1_8_data_ce0;
reg vmStubsPH4Z1_0_data_ce0;
reg vmStubsPH4Z1_0_data_we0;
reg vmStubsPH4Z1_1_data_ce0;
reg vmStubsPH4Z1_1_data_we0;
reg vmStubsPH4Z1_2_data_ce0;
reg vmStubsPH4Z1_2_data_we0;
reg vmStubsPH4Z1_3_data_ce0;
reg vmStubsPH4Z1_3_data_we0;
reg vmStubsPH4Z1_8_data_ce0;
reg vmStubsPH1Z2_0_data_ce0;
reg vmStubsPH1Z2_0_data_we0;
reg vmStubsPH1Z2_1_data_ce0;
reg vmStubsPH1Z2_1_data_we0;
reg vmStubsPH1Z2_2_data_ce0;
reg vmStubsPH1Z2_2_data_we0;
reg vmStubsPH1Z2_3_data_ce0;
reg vmStubsPH1Z2_3_data_we0;
reg vmStubsPH1Z2_8_data_ce0;
reg vmStubsPH2Z2_0_data_ce0;
reg vmStubsPH2Z2_0_data_we0;
reg vmStubsPH2Z2_1_data_ce0;
reg vmStubsPH2Z2_1_data_we0;
reg vmStubsPH2Z2_2_data_ce0;
reg vmStubsPH2Z2_2_data_we0;
reg vmStubsPH2Z2_3_data_ce0;
reg vmStubsPH2Z2_3_data_we0;
reg vmStubsPH2Z2_8_data_ce0;
reg vmStubsPH3Z2_0_data_ce0;
reg vmStubsPH3Z2_0_data_we0;
reg vmStubsPH3Z2_1_data_ce0;
reg vmStubsPH3Z2_1_data_we0;
reg vmStubsPH3Z2_2_data_ce0;
reg vmStubsPH3Z2_2_data_we0;
reg vmStubsPH3Z2_3_data_ce0;
reg vmStubsPH3Z2_3_data_we0;
reg vmStubsPH3Z2_8_data_ce0;
reg vmStubsPH4Z2_0_data_ce0;
reg vmStubsPH4Z2_0_data_we0;
reg vmStubsPH4Z2_1_data_ce0;
reg vmStubsPH4Z2_1_data_we0;
reg vmStubsPH4Z2_2_data_ce0;
reg vmStubsPH4Z2_2_data_we0;
reg vmStubsPH4Z2_3_data_ce0;
reg vmStubsPH4Z2_3_data_we0;
reg vmStubsPH4Z2_8_data_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] p_0_reg_1036;
reg   [6:0] i_reg_1048;
wire   [5:0] tmp_fu_1092_p1;
reg   [5:0] tmp_reg_2033;
wire   [5:0] tmp_100_fu_1096_p1;
reg   [5:0] tmp_100_reg_2038;
wire   [5:0] tmp_101_fu_1100_p1;
reg   [5:0] tmp_101_reg_2043;
wire   [5:0] tmp_102_fu_1104_p1;
reg   [5:0] tmp_102_reg_2048;
wire   [5:0] tmp_103_fu_1108_p1;
reg   [5:0] tmp_103_reg_2053;
wire   [5:0] tmp_104_fu_1112_p1;
reg   [5:0] tmp_104_reg_2058;
wire   [5:0] tmp_105_fu_1116_p1;
reg   [5:0] tmp_105_reg_2063;
wire   [5:0] tmp_106_fu_1120_p1;
reg   [5:0] tmp_106_reg_2068;
wire   [5:0] tmp_107_fu_1124_p1;
reg   [5:0] tmp_107_reg_2073;
wire   [5:0] tmp_108_fu_1128_p1;
reg   [5:0] tmp_108_reg_2078;
wire   [7:0] tmp_109_fu_1132_p1;
reg   [7:0] tmp_109_reg_2083;
wire   [7:0] tmp_110_fu_1136_p1;
reg   [7:0] tmp_110_reg_2088;
wire   [7:0] tmp_111_fu_1140_p1;
reg   [7:0] tmp_111_reg_2093;
wire   [7:0] tmp_112_fu_1144_p1;
reg   [7:0] tmp_112_reg_2098;
wire   [7:0] tmp_113_fu_1148_p1;
reg   [7:0] tmp_113_reg_2103;
wire   [7:0] tmp_114_fu_1152_p1;
reg   [7:0] tmp_114_reg_2108;
wire   [7:0] tmp_115_fu_1156_p1;
reg   [7:0] tmp_115_reg_2113;
wire   [7:0] tmp_116_fu_1160_p1;
reg   [7:0] tmp_116_reg_2118;
wire   [7:0] tmp_117_fu_1164_p1;
reg   [7:0] tmp_117_reg_2123;
wire   [7:0] tmp_118_fu_1168_p1;
reg   [7:0] tmp_118_reg_2128;
wire   [0:0] tmp_119_fu_1212_p3;
reg   [0:0] tmp_119_reg_2133;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_tmp_119_reg_2133;
reg   [0:0] ap_reg_pp0_iter2_tmp_119_reg_2133;
reg   [0:0] ap_reg_pp0_iter3_tmp_119_reg_2133;
wire   [6:0] i_3_fu_1220_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_s_fu_1230_p2;
reg   [0:0] tmp_s_reg_2142;
reg   [0:0] ap_reg_pp0_iter1_tmp_s_reg_2142;
reg   [0:0] ap_reg_pp0_iter2_tmp_s_reg_2142;
reg   [0:0] ap_reg_pp0_iter3_tmp_s_reg_2142;
reg   [1:0] arrayNo_reg_2146;
reg   [1:0] ap_reg_pp0_iter1_arrayNo_reg_2146;
wire   [5:0] newIndex_fu_1258_p2;
reg   [5:0] newIndex_reg_2151;
reg   [1:0] tmp_70_reg_2156;
reg   [1:0] ap_reg_pp0_iter1_tmp_70_reg_2156;
reg   [1:0] ap_reg_pp0_iter2_tmp_70_reg_2156;
wire   [5:0] newIndex40_fu_1278_p2;
reg   [5:0] newIndex40_reg_2160;
reg   [5:0] ap_reg_pp0_iter1_newIndex40_reg_2160;
reg   [5:0] ap_reg_pp0_iter2_newIndex40_reg_2160;
wire   [35:0] HLSFullStubLayerPS_d_fu_1298_p11;
reg   [35:0] HLSFullStubLayerPS_d_reg_2210;
reg   [35:0] ap_reg_pp0_iter3_HLSFullStubLayerPS_d_reg_2210;
wire   [1:0] routePhi_V_fu_1345_p4;
reg   [1:0] routePhi_V_reg_2224;
wire   [0:0] routeZ_V_fu_1355_p3;
reg   [0:0] routeZ_V_reg_2228;
reg   [1:0] tmp_90_reg_2232;
wire   [5:0] newIndex56_fu_1381_p2;
reg   [5:0] newIndex56_reg_2236;
reg   [1:0] tmp_88_reg_2241;
wire   [5:0] newIndex54_fu_1419_p2;
reg   [5:0] newIndex54_reg_2245;
reg   [1:0] tmp_86_reg_2250;
wire   [5:0] newIndex52_fu_1457_p2;
reg   [5:0] newIndex52_reg_2254;
reg   [1:0] tmp_84_reg_2259;
wire   [5:0] newIndex50_fu_1495_p2;
reg   [5:0] newIndex50_reg_2263;
reg   [1:0] tmp_82_reg_2268;
wire   [5:0] newIndex48_fu_1533_p2;
reg   [5:0] newIndex48_reg_2272;
reg   [1:0] tmp_80_reg_2277;
wire   [5:0] newIndex46_fu_1571_p2;
reg   [5:0] newIndex46_reg_2281;
reg   [1:0] tmp_76_reg_2286;
wire   [5:0] newIndex44_fu_1609_p2;
reg   [5:0] newIndex44_reg_2290;
reg   [1:0] tmp_72_reg_2295;
wire   [5:0] newIndex42_fu_1647_p2;
reg   [5:0] newIndex42_reg_2299;
wire   [5:0] index_V_3_fu_1910_p2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_predicate_tran2to7_state2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] newIndex39_fu_1283_p1;
wire    ap_block_pp0_stage0_flag00000000;
wire   [63:0] newIndex41_fu_1322_p1;
wire   [63:0] newIndex57_fu_1690_p1;
wire   [63:0] newIndex55_fu_1715_p1;
wire   [63:0] newIndex53_fu_1740_p1;
wire   [63:0] newIndex51_fu_1765_p1;
wire   [63:0] newIndex49_fu_1790_p1;
wire   [63:0] newIndex47_fu_1815_p1;
wire   [63:0] newIndex45_fu_1840_p1;
wire   [63:0] newIndex43_fu_1865_p1;
reg   [5:0] nPH4Z2_V_fu_242;
wire   [5:0] tmp_77_fu_1541_p2;
wire    ap_CS_fsm_state7;
reg   [5:0] nPH3Z2_V_fu_246;
wire   [5:0] tmp_75_fu_1579_p2;
reg   [5:0] nPH2Z2_V_fu_250;
wire   [5:0] tmp_73_fu_1617_p2;
reg   [5:0] nPH1Z2_V_fu_254;
wire   [5:0] tmp_71_fu_1655_p2;
reg   [5:0] nPH4Z1_V_fu_258;
wire   [5:0] tmp_69_fu_1389_p2;
reg   [5:0] nPH3Z1_V_fu_262;
wire   [5:0] tmp_67_fu_1427_p2;
reg   [5:0] nPH2Z1_V_fu_266;
wire   [5:0] tmp_65_fu_1465_p2;
reg   [5:0] nPH1Z1_V_fu_270;
wire   [5:0] tmp_63_fu_1503_p2;
wire   [17:0] HLSReducedStubLayer_10_fu_1698_p5;
wire   [17:0] HLSReducedStubLayer_9_fu_1723_p5;
wire   [17:0] HLSReducedStubLayer_8_fu_1748_p5;
wire   [17:0] HLSReducedStubLayer_s_fu_1773_p5;
wire   [17:0] HLSReducedStubLayer_7_fu_1798_p5;
wire   [17:0] HLSReducedStubLayer_6_fu_1823_p5;
wire   [17:0] HLSReducedStubLayer_5_fu_1848_p5;
wire   [17:0] HLSReducedStubLayer_11_fu_1873_p5;
wire   [31:0] i_cast4_fu_1226_p1;
wire   [7:0] tmp_53_cast_fu_1235_p1;
wire   [7:0] sum_fu_1243_p2;
wire   [5:0] tmp_120_fu_1239_p1;
wire   [7:0] sum1_fu_1263_p2;
wire   [63:0] HLSFullStubLayerPS_d_fu_1298_p10;
wire   [2:0] tPhi_V_i_fu_1330_p4;
wire   [2:0] r_V_fu_1339_p2;
wire   [7:0] tmp_68_cast_fu_1362_p1;
wire   [7:0] sum9_fu_1366_p2;
wire   [7:0] tmp_66_cast_fu_1400_p1;
wire   [7:0] sum8_fu_1404_p2;
wire   [7:0] tmp_64_cast_fu_1438_p1;
wire   [7:0] sum7_fu_1442_p2;
wire   [7:0] tmp_62_cast_fu_1476_p1;
wire   [7:0] sum6_fu_1480_p2;
wire   [7:0] tmp_76_cast_fu_1514_p1;
wire   [7:0] sum5_fu_1518_p2;
wire   [7:0] tmp_74_cast_fu_1552_p1;
wire   [7:0] sum4_fu_1556_p2;
wire   [7:0] tmp_72_cast_fu_1590_p1;
wire   [7:0] sum3_fu_1594_p2;
wire   [7:0] tmp_70_cast_fu_1628_p1;
wire   [7:0] sum2_fu_1632_p2;
wire   [2:0] phitmp_fu_1675_p4;
wire   [4:0] grp_fu_1083_p4;
wire   [2:0] redPhi_V_fu_1684_p2;
wire   [3:0] redZ_V_fu_1666_p4;
wire   [0:0] tmp_78_fu_1890_p2;
wire   [5:0] index_V_fu_1896_p2;
wire   [5:0] p_s_fu_1902_p3;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

VMRouterDispatchebkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 36 ),
    .din5_WIDTH( 36 ),
    .din6_WIDTH( 36 ),
    .din7_WIDTH( 36 ),
    .din8_WIDTH( 36 ),
    .din9_WIDTH( 36 ),
    .din10_WIDTH( 64 ),
    .dout_WIDTH( 36 ))
VMRouterDispatchebkb_U1(
    .din1(stubsInLayer_0_data_q0),
    .din2(stubsInLayer_1_data_q0),
    .din3(stubsInLayer_2_data_q0),
    .din4(stubsInLayer_3_data_q0),
    .din5(stubsInLayer_4_data_q0),
    .din6(stubsInLayer_5_data_q0),
    .din7(stubsInLayer_6_data_q0),
    .din8(stubsInLayer_7_data_q0),
    .din9(stubsInLayer_8_data_q0),
    .din10(HLSFullStubLayerPS_d_fu_1298_p10),
    .dout(HLSFullStubLayerPS_d_fu_1298_p11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (tmp_119_fu_1212_p3 == 1'd0) & (tmp_s_fu_1230_p2 == 1'd1))) begin
        i_reg_1048 <= i_3_fu_1220_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_1048 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH1Z1_V_fu_270 <= tmp_63_fu_1503_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH1Z1_V_fu_270 <= nPH1Z1_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd0) & (1'd1 == routeZ_V_fu_1355_p3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH1Z2_V_fu_254 <= tmp_71_fu_1655_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH1Z2_V_fu_254 <= nPH1Z2_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd1) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH2Z1_V_fu_266 <= tmp_65_fu_1465_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH2Z1_V_fu_266 <= nPH2Z1_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd1) & (1'd1 == routeZ_V_fu_1355_p3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH2Z2_V_fu_250 <= tmp_73_fu_1617_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH2Z2_V_fu_250 <= nPH2Z2_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd2) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH3Z1_V_fu_262 <= tmp_67_fu_1427_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH3Z1_V_fu_262 <= nPH3Z1_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd2) & (1'd1 == routeZ_V_fu_1355_p3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH3Z2_V_fu_246 <= tmp_75_fu_1579_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH3Z2_V_fu_246 <= nPH3Z2_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH4Z1_V_fu_258 <= tmp_69_fu_1389_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH4Z1_V_fu_258 <= nPH4Z1_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd3) & (1'd1 == routeZ_V_fu_1355_p3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        nPH4Z2_V_fu_242 <= tmp_77_fu_1541_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        nPH4Z2_V_fu_242 <= nPH4Z2_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_119_reg_2133 == 1'd0) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1))) begin
        p_0_reg_1036 <= index_V_3_fu_1910_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_0_reg_1036 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_tmp_s_reg_2142 == 1'd1))) begin
        HLSFullStubLayerPS_d_reg_2210 <= HLSFullStubLayerPS_d_fu_1298_p11;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_arrayNo_reg_2146 <= arrayNo_reg_2146;
        ap_reg_pp0_iter1_newIndex40_reg_2160 <= newIndex40_reg_2160;
        ap_reg_pp0_iter1_tmp_119_reg_2133 <= tmp_119_reg_2133;
        ap_reg_pp0_iter1_tmp_70_reg_2156 <= tmp_70_reg_2156;
        ap_reg_pp0_iter1_tmp_s_reg_2142 <= tmp_s_reg_2142;
        tmp_119_reg_2133 <= i_reg_1048[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_newIndex40_reg_2160 <= ap_reg_pp0_iter1_newIndex40_reg_2160;
        ap_reg_pp0_iter2_tmp_119_reg_2133 <= ap_reg_pp0_iter1_tmp_119_reg_2133;
        ap_reg_pp0_iter2_tmp_70_reg_2156 <= ap_reg_pp0_iter1_tmp_70_reg_2156;
        ap_reg_pp0_iter2_tmp_s_reg_2142 <= ap_reg_pp0_iter1_tmp_s_reg_2142;
        ap_reg_pp0_iter3_HLSFullStubLayerPS_d_reg_2210 <= HLSFullStubLayerPS_d_reg_2210;
        ap_reg_pp0_iter3_tmp_119_reg_2133 <= ap_reg_pp0_iter2_tmp_119_reg_2133;
        ap_reg_pp0_iter3_tmp_s_reg_2142 <= ap_reg_pp0_iter2_tmp_s_reg_2142;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (tmp_119_fu_1212_p3 == 1'd0) & (tmp_s_fu_1230_p2 == 1'd1))) begin
        arrayNo_reg_2146 <= {{sum_fu_1243_p2[7:6]}};
        newIndex40_reg_2160 <= newIndex40_fu_1278_p2;
        newIndex_reg_2151 <= newIndex_fu_1258_p2;
        tmp_70_reg_2156 <= {{sum1_fu_1263_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd0) & (1'd1 == routeZ_V_fu_1355_p3))) begin
        newIndex42_reg_2299 <= newIndex42_fu_1647_p2;
        tmp_72_reg_2295 <= {{sum2_fu_1632_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd1) & (1'd1 == routeZ_V_fu_1355_p3))) begin
        newIndex44_reg_2290 <= newIndex44_fu_1609_p2;
        tmp_76_reg_2286 <= {{sum3_fu_1594_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd2) & (1'd1 == routeZ_V_fu_1355_p3))) begin
        newIndex46_reg_2281 <= newIndex46_fu_1571_p2;
        tmp_80_reg_2277 <= {{sum4_fu_1556_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (routePhi_V_fu_1345_p4 == 2'd3) & (1'd1 == routeZ_V_fu_1355_p3))) begin
        newIndex48_reg_2272 <= newIndex48_fu_1533_p2;
        tmp_82_reg_2268 <= {{sum5_fu_1518_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd0))) begin
        newIndex50_reg_2263 <= newIndex50_fu_1495_p2;
        tmp_84_reg_2259 <= {{sum6_fu_1480_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd1))) begin
        newIndex52_reg_2254 <= newIndex52_fu_1457_p2;
        tmp_86_reg_2250 <= {{sum7_fu_1442_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd2))) begin
        newIndex54_reg_2245 <= newIndex54_fu_1419_p2;
        tmp_88_reg_2241 <= {{sum8_fu_1404_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_fu_1355_p3) & (routePhi_V_fu_1345_p4 == 2'd3))) begin
        newIndex56_reg_2236 <= newIndex56_fu_1381_p2;
        tmp_90_reg_2232 <= {{sum9_fu_1366_p2[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1))) begin
        routePhi_V_reg_2224 <= {{r_V_fu_1339_p2[2:1]}};
        routeZ_V_reg_2228 <= HLSFullStubLayerPS_d_reg_2210[32'd9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_100_reg_2038 <= tmp_100_fu_1096_p1;
        tmp_101_reg_2043 <= tmp_101_fu_1100_p1;
        tmp_102_reg_2048 <= tmp_102_fu_1104_p1;
        tmp_103_reg_2053 <= tmp_103_fu_1108_p1;
        tmp_104_reg_2058 <= tmp_104_fu_1112_p1;
        tmp_105_reg_2063 <= tmp_105_fu_1116_p1;
        tmp_106_reg_2068 <= tmp_106_fu_1120_p1;
        tmp_107_reg_2073 <= tmp_107_fu_1124_p1;
        tmp_108_reg_2078 <= tmp_108_fu_1128_p1;
        tmp_109_reg_2083 <= tmp_109_fu_1132_p1;
        tmp_110_reg_2088 <= tmp_110_fu_1136_p1;
        tmp_111_reg_2093 <= tmp_111_fu_1140_p1;
        tmp_112_reg_2098 <= tmp_112_fu_1144_p1;
        tmp_113_reg_2103 <= tmp_113_fu_1148_p1;
        tmp_114_reg_2108 <= tmp_114_fu_1152_p1;
        tmp_115_reg_2113 <= tmp_115_fu_1156_p1;
        tmp_116_reg_2118 <= tmp_116_fu_1160_p1;
        tmp_117_reg_2123 <= tmp_117_fu_1164_p1;
        tmp_118_reg_2128 <= tmp_118_fu_1168_p1;
        tmp_reg_2033 <= tmp_fu_1092_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (tmp_119_fu_1212_p3 == 1'd0))) begin
        tmp_s_reg_2142 <= tmp_s_fu_1230_p2;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        allStubs_0_data_V_ce0 = 1'b1;
    end else begin
        allStubs_0_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_reg_pp0_iter2_tmp_70_reg_2156 == 2'd0))) begin
        allStubs_0_data_V_we0 = 1'b1;
    end else begin
        allStubs_0_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        allStubs_1_data_V_ce0 = 1'b1;
    end else begin
        allStubs_1_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_reg_pp0_iter2_tmp_70_reg_2156 == 2'd1))) begin
        allStubs_1_data_V_we0 = 1'b1;
    end else begin
        allStubs_1_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        allStubs_2_data_V_ce0 = 1'b1;
    end else begin
        allStubs_2_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_reg_pp0_iter2_tmp_70_reg_2156 == 2'd2))) begin
        allStubs_2_data_V_we0 = 1'b1;
    end else begin
        allStubs_2_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        allStubs_3_data_V_ce0 = 1'b1;
    end else begin
        allStubs_3_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_tmp_s_reg_2142 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_reg_pp0_iter2_tmp_70_reg_2156 == 2'd3))) begin
        allStubs_3_data_V_we0 = 1'b1;
    end else begin
        allStubs_3_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        allStubs_8_data_V_ce0 = 1'b1;
    end else begin
        allStubs_8_data_V_ce0 = 1'b0;
    end
end

assign allStubs_8_data_V_we0 = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_predicate_tran2to7_state2)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state7))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_0_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_1_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_2_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_3_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_4_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_4_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_5_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_5_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_6_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_6_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_7_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_7_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        stubsInLayer_8_data_ce0 = 1'b1;
    end else begin
        stubsInLayer_8_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z1_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd0) & (tmp_84_reg_2259 == 2'd0))) begin
        vmStubsPH1Z1_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z1_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd0) & (2'd1 == tmp_84_reg_2259))) begin
        vmStubsPH1Z1_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z1_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd0) & (2'd2 == tmp_84_reg_2259))) begin
        vmStubsPH1Z1_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z1_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd0) & (2'd3 == tmp_84_reg_2259))) begin
        vmStubsPH1Z1_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z1_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH1Z1_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z2_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd0) & (1'd1 == routeZ_V_reg_2228) & (2'd0 == tmp_72_reg_2295))) begin
        vmStubsPH1Z2_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z2_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd0) & (1'd1 == routeZ_V_reg_2228) & (2'd1 == tmp_72_reg_2295))) begin
        vmStubsPH1Z2_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z2_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd0) & (1'd1 == routeZ_V_reg_2228) & (2'd2 == tmp_72_reg_2295))) begin
        vmStubsPH1Z2_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z2_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd0) & (1'd1 == routeZ_V_reg_2228) & (2'd3 == tmp_72_reg_2295))) begin
        vmStubsPH1Z2_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH1Z2_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH1Z2_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z1_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd1) & (tmp_86_reg_2250 == 2'd0))) begin
        vmStubsPH2Z1_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z1_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd1) & (tmp_86_reg_2250 == 2'd1))) begin
        vmStubsPH2Z1_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z1_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd1) & (2'd2 == tmp_86_reg_2250))) begin
        vmStubsPH2Z1_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z1_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd1) & (2'd3 == tmp_86_reg_2250))) begin
        vmStubsPH2Z1_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z1_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH2Z1_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z2_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd1) & (1'd1 == routeZ_V_reg_2228) & (2'd0 == tmp_76_reg_2286))) begin
        vmStubsPH2Z2_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z2_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd1) & (1'd1 == routeZ_V_reg_2228) & (2'd1 == tmp_76_reg_2286))) begin
        vmStubsPH2Z2_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z2_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd1) & (1'd1 == routeZ_V_reg_2228) & (2'd2 == tmp_76_reg_2286))) begin
        vmStubsPH2Z2_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z2_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd1) & (1'd1 == routeZ_V_reg_2228) & (2'd3 == tmp_76_reg_2286))) begin
        vmStubsPH2Z2_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH2Z2_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH2Z2_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z1_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd2) & (tmp_88_reg_2241 == 2'd0))) begin
        vmStubsPH3Z1_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z1_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd2) & (tmp_88_reg_2241 == 2'd1))) begin
        vmStubsPH3Z1_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z1_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd2) & (tmp_88_reg_2241 == 2'd2))) begin
        vmStubsPH3Z1_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z1_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd2) & (2'd3 == tmp_88_reg_2241))) begin
        vmStubsPH3Z1_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z1_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH3Z1_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z2_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd2) & (1'd1 == routeZ_V_reg_2228) & (2'd0 == tmp_80_reg_2277))) begin
        vmStubsPH3Z2_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z2_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd2) & (1'd1 == routeZ_V_reg_2228) & (2'd1 == tmp_80_reg_2277))) begin
        vmStubsPH3Z2_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z2_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd2) & (1'd1 == routeZ_V_reg_2228) & (2'd2 == tmp_80_reg_2277))) begin
        vmStubsPH3Z2_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z2_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd2) & (1'd1 == routeZ_V_reg_2228) & (2'd3 == tmp_80_reg_2277))) begin
        vmStubsPH3Z2_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH3Z2_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH3Z2_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z1_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd3) & (tmp_90_reg_2232 == 2'd0))) begin
        vmStubsPH4Z1_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z1_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd3) & (tmp_90_reg_2232 == 2'd1))) begin
        vmStubsPH4Z1_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z1_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd3) & (tmp_90_reg_2232 == 2'd2))) begin
        vmStubsPH4Z1_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z1_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (1'd0 == routeZ_V_reg_2228) & (routePhi_V_reg_2224 == 2'd3) & (tmp_90_reg_2232 == 2'd3))) begin
        vmStubsPH4Z1_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z1_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH4Z1_8_data_we0 = 1'b0;

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z2_0_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_0_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd3) & (1'd1 == routeZ_V_reg_2228) & (2'd0 == tmp_82_reg_2268))) begin
        vmStubsPH4Z2_0_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_0_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z2_1_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd3) & (1'd1 == routeZ_V_reg_2228) & (2'd1 == tmp_82_reg_2268))) begin
        vmStubsPH4Z2_1_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_1_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z2_2_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_2_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd3) & (1'd1 == routeZ_V_reg_2228) & (2'd2 == tmp_82_reg_2268))) begin
        vmStubsPH4Z2_2_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_2_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z2_3_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_3_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_reg_pp0_iter3_tmp_s_reg_2142 == 1'd1) & (routePhi_V_reg_2224 == 2'd3) & (1'd1 == routeZ_V_reg_2228) & (2'd3 == tmp_82_reg_2268))) begin
        vmStubsPH4Z2_3_data_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_3_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        vmStubsPH4Z2_8_data_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_8_data_ce0 = 1'b0;
    end
end

assign vmStubsPH4Z2_8_data_we0 = 1'b0;

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter4) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_predicate_tran2to7_state2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter4) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_predicate_tran2to7_state2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HLSFullStubLayerPS_d_fu_1298_p10 = ap_reg_pp0_iter1_arrayNo_reg_2146;

assign HLSReducedStubLayer_10_fu_1698_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_11_fu_1873_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_5_fu_1848_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_6_fu_1823_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_7_fu_1798_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_8_fu_1748_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_9_fu_1723_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign HLSReducedStubLayer_s_fu_1773_p5 = {{{{p_0_reg_1036}, {grp_fu_1083_p4}}, {redPhi_V_fu_1684_p2}}, {redZ_V_fu_1666_p4}};

assign allStubs_0_data_V_address0 = newIndex41_fu_1322_p1;

assign allStubs_0_data_V_d0 = HLSFullStubLayerPS_d_reg_2210;

assign allStubs_1_data_V_address0 = newIndex41_fu_1322_p1;

assign allStubs_1_data_V_d0 = HLSFullStubLayerPS_d_reg_2210;

assign allStubs_2_data_V_address0 = newIndex41_fu_1322_p1;

assign allStubs_2_data_V_d0 = HLSFullStubLayerPS_d_reg_2210;

assign allStubs_3_data_V_address0 = newIndex41_fu_1322_p1;

assign allStubs_3_data_V_d0 = HLSFullStubLayerPS_d_reg_2210;

assign allStubs_8_data_V_address0 = newIndex41_fu_1322_p1;

assign allStubs_8_data_V_d0 = HLSFullStubLayerPS_d_reg_2210;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran2to7_state2 = ((tmp_119_fu_1212_p3 == 1'd1) | ((tmp_119_fu_1212_p3 == 1'd0) & (tmp_s_fu_1230_p2 == 1'd0)));
end

assign ap_return_0 = nPH1Z1_V_fu_270;

assign ap_return_1 = nPH2Z1_V_fu_266;

assign ap_return_2 = nPH3Z1_V_fu_262;

assign ap_return_3 = nPH4Z1_V_fu_258;

assign ap_return_4 = nPH1Z2_V_fu_254;

assign ap_return_5 = nPH2Z2_V_fu_250;

assign ap_return_6 = nPH3Z2_V_fu_246;

assign ap_return_7 = nPH4Z2_V_fu_242;

assign grp_fu_1083_p4 = {{ap_reg_pp0_iter3_HLSFullStubLayerPS_d_reg_2210[35:31]}};

assign i_3_fu_1220_p2 = (i_reg_1048 + 7'd1);

assign i_cast4_fu_1226_p1 = i_reg_1048;

assign index_V_3_fu_1910_p2 = (p_s_fu_1902_p3 + 6'd1);

assign index_V_fu_1896_p2 = ($signed(p_0_reg_1036) + $signed(6'd63));

assign newIndex39_fu_1283_p1 = newIndex_reg_2151;

assign newIndex40_fu_1278_p2 = (tmp_100_reg_2038 + tmp_120_fu_1239_p1);

assign newIndex41_fu_1322_p1 = ap_reg_pp0_iter2_newIndex40_reg_2160;

assign newIndex42_fu_1647_p2 = (tmp_101_reg_2043 + nPH1Z2_V_fu_254);

assign newIndex43_fu_1865_p1 = newIndex42_reg_2299;

assign newIndex44_fu_1609_p2 = (tmp_102_reg_2048 + nPH2Z2_V_fu_250);

assign newIndex45_fu_1840_p1 = newIndex44_reg_2290;

assign newIndex46_fu_1571_p2 = (tmp_103_reg_2053 + nPH3Z2_V_fu_246);

assign newIndex47_fu_1815_p1 = newIndex46_reg_2281;

assign newIndex48_fu_1533_p2 = (tmp_104_reg_2058 + nPH4Z2_V_fu_242);

assign newIndex49_fu_1790_p1 = newIndex48_reg_2272;

assign newIndex50_fu_1495_p2 = (tmp_105_reg_2063 + nPH1Z1_V_fu_270);

assign newIndex51_fu_1765_p1 = newIndex50_reg_2263;

assign newIndex52_fu_1457_p2 = (tmp_106_reg_2068 + nPH2Z1_V_fu_266);

assign newIndex53_fu_1740_p1 = newIndex52_reg_2254;

assign newIndex54_fu_1419_p2 = (tmp_107_reg_2073 + nPH3Z1_V_fu_262);

assign newIndex55_fu_1715_p1 = newIndex54_reg_2245;

assign newIndex56_fu_1381_p2 = (tmp_108_reg_2078 + nPH4Z1_V_fu_258);

assign newIndex57_fu_1690_p1 = newIndex56_reg_2236;

assign newIndex_fu_1258_p2 = (tmp_reg_2033 + tmp_120_fu_1239_p1);

assign p_s_fu_1902_p3 = ((tmp_78_fu_1890_p2[0:0] === 1'b1) ? index_V_fu_1896_p2 : p_0_reg_1036);

assign phitmp_fu_1675_p4 = {{ap_reg_pp0_iter3_HLSFullStubLayerPS_d_reg_2210[23:21]}};

assign r_V_fu_1339_p2 = ($signed(tPhi_V_i_fu_1330_p4) + $signed(3'd7));

assign redPhi_V_fu_1684_p2 = (phitmp_fu_1675_p4 ^ 3'd4);

assign redZ_V_fu_1666_p4 = {{ap_reg_pp0_iter3_HLSFullStubLayerPS_d_reg_2210[8:5]}};

assign routePhi_V_fu_1345_p4 = {{r_V_fu_1339_p2[2:1]}};

assign routeZ_V_fu_1355_p3 = HLSFullStubLayerPS_d_reg_2210[32'd9];

assign stubsInLayer_0_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_1_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_2_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_3_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_4_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_5_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_6_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_7_data_address0 = newIndex39_fu_1283_p1;

assign stubsInLayer_8_data_address0 = newIndex39_fu_1283_p1;

assign sum1_fu_1263_p2 = (tmp_110_reg_2088 + tmp_53_cast_fu_1235_p1);

assign sum2_fu_1632_p2 = (tmp_70_cast_fu_1628_p1 + tmp_111_reg_2093);

assign sum3_fu_1594_p2 = (tmp_72_cast_fu_1590_p1 + tmp_112_reg_2098);

assign sum4_fu_1556_p2 = (tmp_74_cast_fu_1552_p1 + tmp_113_reg_2103);

assign sum5_fu_1518_p2 = (tmp_76_cast_fu_1514_p1 + tmp_114_reg_2108);

assign sum6_fu_1480_p2 = (tmp_62_cast_fu_1476_p1 + tmp_115_reg_2113);

assign sum7_fu_1442_p2 = (tmp_64_cast_fu_1438_p1 + tmp_116_reg_2118);

assign sum8_fu_1404_p2 = (tmp_66_cast_fu_1400_p1 + tmp_117_reg_2123);

assign sum9_fu_1366_p2 = (tmp_68_cast_fu_1362_p1 + tmp_118_reg_2128);

assign sum_fu_1243_p2 = (tmp_109_reg_2083 + tmp_53_cast_fu_1235_p1);

assign tPhi_V_i_fu_1330_p4 = {{HLSFullStubLayerPS_d_reg_2210[25:23]}};

assign tmp_100_fu_1096_p1 = tmp_11[5:0];

assign tmp_101_fu_1100_p1 = tmp_16[5:0];

assign tmp_102_fu_1104_p1 = tmp_17[5:0];

assign tmp_103_fu_1108_p1 = tmp_18[5:0];

assign tmp_104_fu_1112_p1 = tmp_19[5:0];

assign tmp_105_fu_1116_p1 = tmp_12[5:0];

assign tmp_106_fu_1120_p1 = tmp_13[5:0];

assign tmp_107_fu_1124_p1 = tmp_14[5:0];

assign tmp_108_fu_1128_p1 = tmp_15[5:0];

assign tmp_109_fu_1132_p1 = tmp_1[7:0];

assign tmp_110_fu_1136_p1 = tmp_11[7:0];

assign tmp_111_fu_1140_p1 = tmp_16[7:0];

assign tmp_112_fu_1144_p1 = tmp_17[7:0];

assign tmp_113_fu_1148_p1 = tmp_18[7:0];

assign tmp_114_fu_1152_p1 = tmp_19[7:0];

assign tmp_115_fu_1156_p1 = tmp_12[7:0];

assign tmp_116_fu_1160_p1 = tmp_13[7:0];

assign tmp_117_fu_1164_p1 = tmp_14[7:0];

assign tmp_118_fu_1168_p1 = tmp_15[7:0];

assign tmp_119_fu_1212_p3 = i_reg_1048[32'd6];

assign tmp_120_fu_1239_p1 = i_reg_1048[5:0];

assign tmp_53_cast_fu_1235_p1 = i_reg_1048;

assign tmp_62_cast_fu_1476_p1 = nPH1Z1_V_fu_270;

assign tmp_63_fu_1503_p2 = (nPH1Z1_V_fu_270 + 6'd1);

assign tmp_64_cast_fu_1438_p1 = nPH2Z1_V_fu_266;

assign tmp_65_fu_1465_p2 = (nPH2Z1_V_fu_266 + 6'd1);

assign tmp_66_cast_fu_1400_p1 = nPH3Z1_V_fu_262;

assign tmp_67_fu_1427_p2 = (nPH3Z1_V_fu_262 + 6'd1);

assign tmp_68_cast_fu_1362_p1 = nPH4Z1_V_fu_258;

assign tmp_69_fu_1389_p2 = (nPH4Z1_V_fu_258 + 6'd1);

assign tmp_70_cast_fu_1628_p1 = nPH1Z2_V_fu_254;

assign tmp_71_fu_1655_p2 = (nPH1Z2_V_fu_254 + 6'd1);

assign tmp_72_cast_fu_1590_p1 = nPH2Z2_V_fu_250;

assign tmp_73_fu_1617_p2 = (nPH2Z2_V_fu_250 + 6'd1);

assign tmp_74_cast_fu_1552_p1 = nPH3Z2_V_fu_246;

assign tmp_75_fu_1579_p2 = (nPH3Z2_V_fu_246 + 6'd1);

assign tmp_76_cast_fu_1514_p1 = nPH4Z2_V_fu_242;

assign tmp_77_fu_1541_p2 = (nPH4Z2_V_fu_242 + 6'd1);

assign tmp_78_fu_1890_p2 = ((p_0_reg_1036 == 6'd63) ? 1'b1 : 1'b0);

assign tmp_fu_1092_p1 = tmp_1[5:0];

assign tmp_s_fu_1230_p2 = (($signed(i_cast4_fu_1226_p1) < $signed(nStubs)) ? 1'b1 : 1'b0);

assign vmStubsPH1Z1_0_data_address0 = newIndex51_fu_1765_p1;

assign vmStubsPH1Z1_0_data_d0 = HLSReducedStubLayer_s_fu_1773_p5;

assign vmStubsPH1Z1_1_data_address0 = newIndex51_fu_1765_p1;

assign vmStubsPH1Z1_1_data_d0 = HLSReducedStubLayer_s_fu_1773_p5;

assign vmStubsPH1Z1_2_data_address0 = newIndex51_fu_1765_p1;

assign vmStubsPH1Z1_2_data_d0 = HLSReducedStubLayer_s_fu_1773_p5;

assign vmStubsPH1Z1_3_data_address0 = newIndex51_fu_1765_p1;

assign vmStubsPH1Z1_3_data_d0 = HLSReducedStubLayer_s_fu_1773_p5;

assign vmStubsPH1Z1_8_data_address0 = newIndex51_fu_1765_p1;

assign vmStubsPH1Z1_8_data_d0 = HLSReducedStubLayer_s_fu_1773_p5;

assign vmStubsPH1Z2_0_data_address0 = newIndex43_fu_1865_p1;

assign vmStubsPH1Z2_0_data_d0 = HLSReducedStubLayer_11_fu_1873_p5;

assign vmStubsPH1Z2_1_data_address0 = newIndex43_fu_1865_p1;

assign vmStubsPH1Z2_1_data_d0 = HLSReducedStubLayer_11_fu_1873_p5;

assign vmStubsPH1Z2_2_data_address0 = newIndex43_fu_1865_p1;

assign vmStubsPH1Z2_2_data_d0 = HLSReducedStubLayer_11_fu_1873_p5;

assign vmStubsPH1Z2_3_data_address0 = newIndex43_fu_1865_p1;

assign vmStubsPH1Z2_3_data_d0 = HLSReducedStubLayer_11_fu_1873_p5;

assign vmStubsPH1Z2_8_data_address0 = newIndex43_fu_1865_p1;

assign vmStubsPH1Z2_8_data_d0 = HLSReducedStubLayer_11_fu_1873_p5;

assign vmStubsPH2Z1_0_data_address0 = newIndex53_fu_1740_p1;

assign vmStubsPH2Z1_0_data_d0 = HLSReducedStubLayer_8_fu_1748_p5;

assign vmStubsPH2Z1_1_data_address0 = newIndex53_fu_1740_p1;

assign vmStubsPH2Z1_1_data_d0 = HLSReducedStubLayer_8_fu_1748_p5;

assign vmStubsPH2Z1_2_data_address0 = newIndex53_fu_1740_p1;

assign vmStubsPH2Z1_2_data_d0 = HLSReducedStubLayer_8_fu_1748_p5;

assign vmStubsPH2Z1_3_data_address0 = newIndex53_fu_1740_p1;

assign vmStubsPH2Z1_3_data_d0 = HLSReducedStubLayer_8_fu_1748_p5;

assign vmStubsPH2Z1_8_data_address0 = newIndex53_fu_1740_p1;

assign vmStubsPH2Z1_8_data_d0 = HLSReducedStubLayer_8_fu_1748_p5;

assign vmStubsPH2Z2_0_data_address0 = newIndex45_fu_1840_p1;

assign vmStubsPH2Z2_0_data_d0 = HLSReducedStubLayer_5_fu_1848_p5;

assign vmStubsPH2Z2_1_data_address0 = newIndex45_fu_1840_p1;

assign vmStubsPH2Z2_1_data_d0 = HLSReducedStubLayer_5_fu_1848_p5;

assign vmStubsPH2Z2_2_data_address0 = newIndex45_fu_1840_p1;

assign vmStubsPH2Z2_2_data_d0 = HLSReducedStubLayer_5_fu_1848_p5;

assign vmStubsPH2Z2_3_data_address0 = newIndex45_fu_1840_p1;

assign vmStubsPH2Z2_3_data_d0 = HLSReducedStubLayer_5_fu_1848_p5;

assign vmStubsPH2Z2_8_data_address0 = newIndex45_fu_1840_p1;

assign vmStubsPH2Z2_8_data_d0 = HLSReducedStubLayer_5_fu_1848_p5;

assign vmStubsPH3Z1_0_data_address0 = newIndex55_fu_1715_p1;

assign vmStubsPH3Z1_0_data_d0 = HLSReducedStubLayer_9_fu_1723_p5;

assign vmStubsPH3Z1_1_data_address0 = newIndex55_fu_1715_p1;

assign vmStubsPH3Z1_1_data_d0 = HLSReducedStubLayer_9_fu_1723_p5;

assign vmStubsPH3Z1_2_data_address0 = newIndex55_fu_1715_p1;

assign vmStubsPH3Z1_2_data_d0 = HLSReducedStubLayer_9_fu_1723_p5;

assign vmStubsPH3Z1_3_data_address0 = newIndex55_fu_1715_p1;

assign vmStubsPH3Z1_3_data_d0 = HLSReducedStubLayer_9_fu_1723_p5;

assign vmStubsPH3Z1_8_data_address0 = newIndex55_fu_1715_p1;

assign vmStubsPH3Z1_8_data_d0 = HLSReducedStubLayer_9_fu_1723_p5;

assign vmStubsPH3Z2_0_data_address0 = newIndex47_fu_1815_p1;

assign vmStubsPH3Z2_0_data_d0 = HLSReducedStubLayer_6_fu_1823_p5;

assign vmStubsPH3Z2_1_data_address0 = newIndex47_fu_1815_p1;

assign vmStubsPH3Z2_1_data_d0 = HLSReducedStubLayer_6_fu_1823_p5;

assign vmStubsPH3Z2_2_data_address0 = newIndex47_fu_1815_p1;

assign vmStubsPH3Z2_2_data_d0 = HLSReducedStubLayer_6_fu_1823_p5;

assign vmStubsPH3Z2_3_data_address0 = newIndex47_fu_1815_p1;

assign vmStubsPH3Z2_3_data_d0 = HLSReducedStubLayer_6_fu_1823_p5;

assign vmStubsPH3Z2_8_data_address0 = newIndex47_fu_1815_p1;

assign vmStubsPH3Z2_8_data_d0 = HLSReducedStubLayer_6_fu_1823_p5;

assign vmStubsPH4Z1_0_data_address0 = newIndex57_fu_1690_p1;

assign vmStubsPH4Z1_0_data_d0 = HLSReducedStubLayer_10_fu_1698_p5;

assign vmStubsPH4Z1_1_data_address0 = newIndex57_fu_1690_p1;

assign vmStubsPH4Z1_1_data_d0 = HLSReducedStubLayer_10_fu_1698_p5;

assign vmStubsPH4Z1_2_data_address0 = newIndex57_fu_1690_p1;

assign vmStubsPH4Z1_2_data_d0 = HLSReducedStubLayer_10_fu_1698_p5;

assign vmStubsPH4Z1_3_data_address0 = newIndex57_fu_1690_p1;

assign vmStubsPH4Z1_3_data_d0 = HLSReducedStubLayer_10_fu_1698_p5;

assign vmStubsPH4Z1_8_data_address0 = newIndex57_fu_1690_p1;

assign vmStubsPH4Z1_8_data_d0 = HLSReducedStubLayer_10_fu_1698_p5;

assign vmStubsPH4Z2_0_data_address0 = newIndex49_fu_1790_p1;

assign vmStubsPH4Z2_0_data_d0 = HLSReducedStubLayer_7_fu_1798_p5;

assign vmStubsPH4Z2_1_data_address0 = newIndex49_fu_1790_p1;

assign vmStubsPH4Z2_1_data_d0 = HLSReducedStubLayer_7_fu_1798_p5;

assign vmStubsPH4Z2_2_data_address0 = newIndex49_fu_1790_p1;

assign vmStubsPH4Z2_2_data_d0 = HLSReducedStubLayer_7_fu_1798_p5;

assign vmStubsPH4Z2_3_data_address0 = newIndex49_fu_1790_p1;

assign vmStubsPH4Z2_3_data_d0 = HLSReducedStubLayer_7_fu_1798_p5;

assign vmStubsPH4Z2_8_data_address0 = newIndex49_fu_1790_p1;

assign vmStubsPH4Z2_8_data_d0 = HLSReducedStubLayer_7_fu_1798_p5;

endmodule //VMRouter_1_s
